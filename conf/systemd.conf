<source>
  @type systemd
  @id in_systemd_kubelet
  @label @systemd
  filters [{ "_SYSTEMD_UNIT": "kubelet.service" }]
  <entry>
    field_map {"MESSAGE": "message", "_HOSTNAME": "hostname", "_SYSTEMD_UNIT": "systemd_unit"}
    field_map_strict true
  </entry>
  path /run/log/journal
  pos_file /var/log/fluentd-journald-kubelet.pos
  read_from_head true
  tag kubelet.service
</source>

<source>
  @type systemd
  @id in_systemd_kubeproxy
  @label @systemd
  filters [{ "_SYSTEMD_UNIT": "kubeproxy.service" }]
  <entry>
    field_map {"MESSAGE": "message", "_HOSTNAME": "hostname", "_SYSTEMD_UNIT": "systemd_unit"}
    field_map_strict true
  </entry>
  path /run/log/journal
  pos_file /var/log/fluentd-journald-kubeproxy.pos
  read_from_head true
  tag kubeproxy.service
</source>

<source>
  @type systemd
  @id in_systemd_docker
  @label @systemd
  filters [{ "_SYSTEMD_UNIT": "docker.service" }]
  <entry>
    field_map {"MESSAGE": "message", "_HOSTNAME": "hostname", "_SYSTEMD_UNIT": "systemd_unit"}
    field_map_strict true
  </entry>
  path /run/log/journal
  pos_file /var/log/fluentd-journald-docker.pos
  read_from_head true
  tag docker.service
</source>

<label @systemd>
  <filter **>
    @type record_transformer
    @id filter_systemd_stream_transformer
    <record>
      stream_name ${stream_name1}-${stream_name2}
    </record>
  </filter>

  <match **>
    @type kafka_buffered
    brokers               ${brokers}

    topic_key             ${kafka_topic}
    default_topic         ${kafka_topic}

    output_data_type      json
    output_include_tag    true
    output_include_time   true
    get_kafka_client_log  false

#    required_acks         1
    compression_codec     gzip

  </match>
</label>